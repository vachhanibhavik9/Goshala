[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2024-04-25 15:17:58.855982",
  "module": "Goshala",
  "name": "Total_Milk_Sales_Invoice",
  "script": "frappe.ui.form.on('Sales Invoice Item', {\n\tcustom_morning_qty: function(frm, cdt, cdn)\n\t{\n\t    get_total_qty(frm, cdt, cdn)\n\t},\n\tcustom_evening_qty: function(frm, cdt, cdn)\n\t{\n\t   get_total_qty(frm, cdt, cdn)\n\t}\n\t\n});\n\nfunction get_total_qty(frm, cdt, cdn)\n{\n    var child_data = locals[cdt][cdn];\n    var total_qty = child_data.custom_morning_qty + child_data.custom_evening_qty\n    \n    frappe.model.set_value(cdt, cdn, \"qty\", total_qty)\n    \n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2024-04-25 15:17:43.192367",
  "module": "Goshala",
  "name": "Stock Entry Milk Table",
  "script": "frappe.ui.form.on('Stock Entry Detail', {\n\tcustom_morning_qty: function(frm, cdt, cdn)\n\t{\n\t    get_total_qty(frm, cdt, cdn)\n\t},\n\tcustom_evening_qty: function(frm, cdt, cdn)\n\t{\n\t   get_total_qty(frm, cdt, cdn)\n\t}\n\t\n});\n\nfunction get_total_qty(frm, cdt, cdn)\n{\n    var child_data = locals[cdt][cdn];\n    var total_qty = parseFloat(child_data.custom_morning_qty) + parseFloat(child_data.custom_evening_qty)\n    \n    frappe.model.set_value(cdt, cdn, \"qty\", total_qty)\n    \n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Go Master",
  "enabled": 0,
  "modified": "2024-04-25 15:22:38.880937",
  "module": "Goshala",
  "name": "Set gender wise go-type",
  "script": "frappe.ui.form.on('Go Master', {\n    gender: function(frm) {\n        var selectedGender = frm.doc.gender;\n\n        frappe.call({\n            method: \"frappe.client.get_list\",\n            args: {\n                doctype: \"Go Type\",\n                filters: {\n                    gender: selectedGender\n                },\n                fields: [\"name\"]\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var types = response.message.map(type => type.name);\n                    cur_frm.set_query(\"current_type\", function() {\n                        return {\n                            \"filters\": {\n                                \"name\": ['in', types]\n                            }\n                        };\n                    });\n                }\n            }\n        });\n    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2024-04-25 15:17:47.382862",
  "module": "Goshala",
  "name": "Total Qty Stock Entry",
  "script": "frappe.ui.form.on('Stock Entry', {\n\tbefore_save: function(frm) {\n        setTotalMilk(frm.doc);\n        setTotalMorningMilk(frm.doc);\n        setTotalEveningMilk(frm.doc);\n        \n    }\n});\n\nfunction setTotalMilk(doc) {\n    var totalMilk = 0;\n\n    for (var i = 0; i < doc.items.length; i++) {\n        totalMilk += doc.items[i].qty;\n    }\n\n    doc.custom_total_milk = totalMilk;\n}\n\nfunction setTotalMorningMilk(doc) {\n    var totalMorningMilk = 0;\n\n    for (var i = 0; i < doc.items.length; i++) {\n        totalMorningMilk += doc.items[i].custom_morning_qty;\n    }\n\n    doc.custom_total_morning_milk = totalMorningMilk;\n}\n\nfunction setTotalEveningMilk(doc) {\n    var totalEveningMilk = 0;\n\n    for (var i = 0; i < doc.items.length; i++) {\n        totalEveningMilk += doc.items[i].custom_evening_qty;\n    }\n\n    doc.custom_total_evening_milk = totalEveningMilk;\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2024-04-16 16:55:36.049475",
  "module": "Goshala",
  "name": "Get Bulk item",
  "script": "frappe.ui.form.on('Stock Entry', {\n    stock_entry_type(frm) {\n        if (frm.doc.stock_entry_type === 'Milk Production') {\n            frm.add_custom_button(__('Get Go'), function() {\n                frappe.msgprint('Get Go Successfully !');\n            });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2024-04-25 15:17:38.706502",
  "module": "Goshala",
  "name": "Create Sales Invoice Button",
  "script": "// frappe.listview_settings['Sales Invoice'] = {\n//     onload: function(listview) {\n//         listview.page.add_inner_button(\"Create Sales Invoice\", function() {\n//             // ButtonFunction(listview);\n//             frappe.msgprint(\"Create Sales Invoice Button Clicked!\");\n//         });;\n//     },\n// }\n\nfrappe.listview_settings['Sales Invoice'] = {\n    onload: function(listview) {\n        listview.page.add_inner_button('Create Sales Invoice', function() {\n            frappe.prompt([\n                {\n                    'fieldname': 'month',\n                    'fieldtype': 'Select',\n                    'label': 'Month',\n                    'options': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n                },\n                {\n                    'fieldname': 'year',\n                    'fieldtype': 'Data',\n                    'label': 'Year'\n                }\n            ],\n            function(values){\n                // Get the selected month and year\n                var month = values.month;\n                var year = values.year;\n\n                // Convert month name to its corresponding number (e.g., January -> 1)\n                var monthNumber = new Date(Date.parse(month + \" 1, \" + year)).getMonth() + 1;\n\n                // Calculate the number of days in the selected month\n                var daysInMonth = new Date(year, monthNumber, 0).getDate();\n\n                // Construct the start and end dates\n                var startDate = '01-' + monthNumber.toString().padStart(2, '0') + '-' + year;\n                var endDate = daysInMonth.toString().padStart(2, '0') + '-' + monthNumber.toString().padStart(2, '0') + '-' + year;\n\n                // Output the start and end dates\n                console.log(startDate + ' to ' + endDate);\n            },\n            'Add Month And Year');\n        });\n    }\n};\n\n\n\n\n",
  "view": "List"
 }
]